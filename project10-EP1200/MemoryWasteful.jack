// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * Memory operations library.
 */ 
class Memory {
    static Array ram;
    static Array free;
    /** Initializes memory parameters. */
    function void init() {
        let ram = 0;
        let free = 2048;
        return;
    }

    /** Returns the value of the main memory at the given address. */
    function int peek(int address) {
        var int x;
        let x = ram[address];
        return x;
    }

    /** Sets the value of the main memory at this address
     *  to the given value. */
    function void poke(int address, int value) {
        let ram[address] = value;
        return;
    }

    /** finds and allocates from the heap a memory block of the 
     *  specified size and returns a reference to its base address. */
    function int alloc(int size) {
        var int block;
        let block = free;
        if ((free+ size) > 16383){
            return null;
        } 
        let free = free + size;
        return block;
    }

    /** De-allocates the given object and frees its space. */
    function void deAlloc(int object) {
        return;
    }    
}
